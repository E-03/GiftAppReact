{"version":3,"sources":["Components/AddCategory.js","helpers/getGift.js","Components/GiftGridItem.js","Components/GiftGrid.js","hooks/useFetchGift.js","Components/GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","category","console","log","type","value","onChange","target","getGift","a","url","encodeURI","fetch","resp","json","data","giftsInfo","map","img","id","title","images","downsized_medium","GiftGridItem","className","src","alt","GiftGrid","categoria","loading","state","setstate","useEffect","then","setTimeout","useFetchGifts","GiftExpertApp","categories","main","document","getElementById","ReactDOM","render"],"mappings":"uLAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACI,uBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,GAC3BR,GAAe,SAAAS,GAAQ,OAAMP,GAAN,mBAAqBO,OAC5CN,EAAc,KAEdO,QAAQC,IAAI,wBAKhB,UACI,8CACA,uBACIC,KAAK,OACLC,MAAQX,EACRY,SArBS,SAACT,GAClBK,QAAQC,IAAIN,EAAEU,OAAOF,OACrBV,EAAcE,EAAEU,OAAOF,c,+BCTlBG,EAAO,uCAAG,WAAQP,GAAR,uBAAAQ,EAAA,6DAEbC,EAFa,0FAE4EC,UAAWV,GAFvF,sBAGAW,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAYD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC9B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAe,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACtC,OACI,sBAAKc,UAAU,wCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAMA,EAAN,WCFCO,EAAW,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACvB,ECFyB,SAAEA,GAE3B,MAA0BnC,mBAAS,CAC/BsB,KAAM,GACNc,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OAdAC,qBAAW,WACPxB,EAASoB,GAAYK,MAAM,SAAAf,GAEvBgB,YAAY,WACRH,EAAS,CACLhB,KAAMG,EACNW,SAAS,IAEb3B,QAAQC,IAAIe,KACb,UAGR,CAAEU,IAEEE,EDnBmBK,CAAcP,GAAhCb,EAAR,EAAQA,KAAMc,EAAd,EAAcA,QAQd,OAPA3B,QAAQC,IAAI,WAAaY,GAQrB,qCACI,mCAAOa,KAELC,GAAW,8CAEb,qBAAKL,UAAU,YAAf,SAEQT,EAAKE,KAAI,SAAAC,GACL,OAAO,cAAC,EAAD,eAEEA,GADCA,EAAIC,aEnBzBiB,EAAgB,WAEzB,MAAoC3C,mBAAS,IAA7C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAEA,OACI,qCACI,4CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQ6C,EAAWpB,KAAI,SAAAhB,GACX,OAAO,cAAC,EAAD,CAEH2B,UAAY3B,GADNA,YCT5BqC,G,MAAOC,SAASC,eAAe,SAErCC,IAASC,OAGP,cAAC,EAAD,IACAJ,K","file":"static/js/main.ec0f07a2.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState(\"\");\r\n\r\n    const handleChange = (e) => {\r\n        console.log(e.target.value);\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if( inputValue.trim().length > 2 ){\r\n            setCategories( category => [ inputValue, ...category ] );\r\n            setInputValue(\"\");\r\n        }else{\r\n            console.log(\"Inserte un valor!!!\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <h2>Add Category</h2>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleChange }\r\n            />\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n","export const getGift = async ( category ) => {\r\n    \r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=CfyPCmTeQu1aNSGXXLnmvfcEoadjGnse&q=${encodeURI( category )}&limit=10`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json(); //Como devuelve un obj se pone entre { }\r\n    \r\n    const giftsInfo = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url \r\n        };\r\n    })\r\n\r\n    return giftsInfo;\r\n}","import React from 'react';\r\n\r\nexport const GiftGridItem = ({ id, title, url }) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__flash\">                           \r\n            <img src={ url } alt={ title } />\r\n            <p> { title } </p>                \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifts } from '../hooks/useFetchGift';\r\nimport { GiftGridItem } from './GiftGridItem';\r\n\r\nexport const GiftGrid = ({ categoria }) => {\r\n    const { data, loading } = useFetchGifts(categoria);\r\n    console.log(\"Images: \" + data);\r\n    \r\n    // //Permite que solo se renderice una sola vez, sino se pone llama la function siempre en un loop....\r\n    // useEffect( () => {\r\n    //     getGift(categoria).then( setImages );\r\n    // }, [ categoria ])\r\n    \r\n    return (\r\n        <>    \r\n            <h3> { categoria }</h3>\r\n\r\n            { loading && <p> Cargando... </p> }\r\n\r\n            <div className=\"card-grid\">\r\n                { \r\n                    data.map(img => {\r\n                        return <GiftGridItem\r\n                            key={ img.id } \r\n                            { ...img }\r\n                        />\r\n                    })\r\n                }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGift } from '../helpers/getGift';\r\n\r\nexport const useFetchGifts = ( categoria ) => {\r\n    \r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n    \r\n    useEffect( () => {\r\n        getGift( categoria ).then( img => {\r\n\r\n            setTimeout( () => {\r\n                setstate({\r\n                    data: img,\r\n                    loading: false\r\n                });\r\n                console.log(img)\r\n            }, 3000)\r\n\r\n        });\r\n    }, [ categoria ])\r\n\r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './AddCategory';\r\nimport { GiftGrid } from './GiftGrid';\r\n\r\nexport const GiftExpertApp = () => {\r\n    \r\n    const [categories, setCategories] = useState([]);\r\n\r\n    return(\r\n        <>\r\n            <h1>GiftExpert</h1>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr />\r\n            <ul>\r\n                {\r\n                    categories.map(category =>{\r\n                        return <GiftGrid \r\n                            key={ category }\r\n                            categoria={ category }\r\n                        />\r\n                    })\r\n                }\r\n            </ul>\r\n        </>\r\n    );\r\n}","import ReactDOM from 'react-dom';\nimport { GiftExpertApp } from './Components/GiftExpertApp';\nimport './Styles/giftExpert.css';\n\n//import CounterApp from './Components/CounterApp';\n//import FirstApp from './Components/MyFirstApp';\n//import './Styles/index.css';\n\nconst main = document.getElementById('root');\n\nReactDOM.render(\n  //<FirstApp ddd=\"Dias\" subtitle=\"klk\" />,\n  // <CounterApp />,\n  <GiftExpertApp/>,\n  main \n);\n\n\n\n"],"sourceRoot":""}